name: Build releases

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0

jobs:
  build:
    name: Build binary
    strategy:
      fail-fast: false
      matrix:
        job:
          - { target: x86_64-unknown-linux-musl, output: music-data-tools, artifact: music-data-tools-linux-x86_64, os: ubuntu-latest }
          - { target: aarch64-unknown-linux-musl, output: music-data-tools, artifact: music-data-tools-linux-aarch64, os: ubuntu-latest }
          - { target: armv7-unknown-linux-musleabi, output: music-data-tools, artifact: music-data-tools-linux-armv7, os: ubuntu-latest }
          - { target: x86_64-apple-darwin, output: music-data-tools, artifact: music-data-tools-macos-x86_64, os: macos-latest }
          - { target: x86_64-pc-windows-msvc, output: music-data-tools.exe, artifact: music-data-tools-windows-x86_64.exe, os: windows-2019 }
    runs-on: ${{ matrix.job.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.job.target }}

      - name: Build artifact
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.job.target }} --locked

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.job.artifact }}
          path: target/${{ matrix.job.target }}/release/${{ matrix.job.output }}
